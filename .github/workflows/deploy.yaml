name: Deploy to Maven Central

on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/main/resources/api.yaml'
      - 'pom.xml'
  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # upload to release contents

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set version on release
        if: github.event_name == 'release'
        run: sed -i "0,\|</version>|{s|<version>.*-SNAPSHOT</version>|<version>${GITHUB_REF##*/v}</version>|}" pom.xml

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MVN_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: 'maven'

      - name: Bundle and publish to Central
        run: mvn deploy -P publish -DdeploymentName=github_workflow
        env:
          MAVEN_USERNAME: ${{ secrets.MVN_CENTRAL_TOKEN }}
          MAVEN_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MVN_SIGNING_KEY_PASSPHRASE }}

      - name: Attach artifacts to release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for f in $(find target -maxdepth 1 -name \*.jar -o -name \*.asc -o -name \*.pom); do
            gh release upload ${{ github.event.release.tag_name }} $f
          done
